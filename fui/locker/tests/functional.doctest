===========================
fui.locker functional tests
===========================


Setting up and log in as admin
------------------------------

	>>> browser = self.browser
	>>> portal_url = self.portal.absolute_url()
	>>> self.loginAdminClick()


Make sure admin has links to add
--------------------------------
	>>> browser.open(portal_url)
	>>> browser.getLink(id='lockerregistry').url.endswith("createObject?type_name=LockerRegistry")
	True
	

Add LockerRegister as admin
---------------------------
	
	>>> browser.open(portal_url)
	>>> browser.getLink(id='lockerregistry').click()
	>>> browser.getControl(name='title').value = "Reg09"
	>>> browser.getControl(name='bachelorlockers:lines').value = "One:1000-1999"
	>>> browser.getControl(name='masterlockers:lines').value = "A:2000-2999\nB:4000-3999"
	>>> browser.getControl(name='form_submit').click()

This should have added an object called 'Reg09' in the portal root, invoking
the title-to-id renaming.

	>>> 'reg09' in self.portal.objectIds()
	True
	>>> reg = self.portal["reg09"]
	>>> reg.Title()
	'Reg09'
	>>> reg.getBachelorlockers()
	('One:1000-1999',)
	>>> reg.getMasterlockers()
	('A:2000-2999', 'B:4000-3999')

No need to test these further since we already have tests for Lockerlist:
	>>> 1000 in reg.getParsedBachelorlockers()
	True
	>>> 2000 in reg.getParsedMasterlockers()
	True



Add LockerReservation using the public form
-------------------------------------------

	>>> import os
	>>> currentUser = os.environ['USER']
	>>> alternativeUser = 'root'

	>>> browser.open(reg.absolute_url())
	>>> browser.getControl(name='form.username').value = currentUser
	>>> browser.getControl(name='form.lockerid').value = '2000'
	>>> browser.getControl(name='form.actions.register').click()
	>>> currentUser in reg.objectIds()
	True

Duplicate username:
	>>> browser.open(reg.absolute_url())
	>>> browser.getControl(name='form.username').value = currentUser
	>>> browser.getControl(name='form.lockerid').value = '2001'
	>>> browser.getControl(name='form.actions.register').click()
	>>> "<dt>Error</dt>" in browser.contents
	True
	>>> "already a locker reserved" in browser.contents
	True

Duplicate id:
	>>> browser.open(reg.absolute_url())
	>>> browser.getControl(name='form.username').value = alternativeUser
	>>> browser.getControl(name='form.lockerid').value = '2000'
	>>> browser.getControl(name='form.actions.register').click()
	>>> "<dt>Error</dt>" in browser.contents
	True
	>>> "is already reserved" in browser.contents
	True
